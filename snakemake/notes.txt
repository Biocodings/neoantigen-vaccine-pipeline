# This assumes running on the PGV compute node, which already has a GATK jar.
# Instructions still apply on a different machine, but will require installing GATK.

# Set up a Conda environment:

# snakemake needs python3
conda create -n pgv
source activate pgv

# set up Bioconda; install channels in this order
conda config --add channels r
conda config --add channels defaults
conda config --add channels conda-forge
conda config --add channels bioconda

# install a bunch of bio tools; gatk needs to be this version, latest doesn't work
# graphviz needed for DAG visualization
# ucsc-liftover for converting coverage bed files between various alignments
# java version specific to MuTect
conda install bwa samtools sambamba snakemake picard gatk==3.7 graphviz bedtools ucsc-liftover java-jdk==8.0.92 vcftools star

# need to link GATK
# unfortunately, then also need to edit the gatk binary (see "which gatk") to have the right
# value for jar_file.
gatk-register /data/biokepi-work-dir/workdir/toolkit/gatk.NOVERSION/GenomeAnalysisTK_37.jar

# MuTect 1.1.7 downloaded from https://software.broadinstitute.org/gatk/download/mutect, to path:
# /biokepi/workdir/toolkit/mutect-1.1.7.jar 

# MuTect needs Java 1.7, while GATK and other things need Java 1.8.
# Dealing with this by setting up a separate Conda environment, specifically for Java 7
conda create -n java17
source activate java17
conda install java-jdk==7.0.91
# This results in java 7 being installed to /home/julia/miniconda3/envs/java17/bin/java
# This should be run only for MuTect.

# Also need to install the Perl vcftools:
cd ~/bin
wget -O vcftools_0.1.13.tar.gz https://kent.dl.sourceforge.net/project/vcftools/vcftools_0.1.13.tar.gz
tar xvfz vcftools_0.1.13.tar.gz
cd vcftools_0.1.13/
# export PERL5LIB=~/bin/vcftools-vcftools-ea875e2/src/perl  (not sure where I got this from? seems unnecessary)
# this will build both the C++ and Perl, we're only using Perl, but that's fine
make
# copy stuff over to $HOME/bin, already on the path
# run `which vcftools` to make sure it's the conda-installed version, rather than this one
# (depends on PATH setup)
cp bin/* $HOME/bin
cp lib/perl5/site_perl/* $HOME/bin
export PERL5LIB=$HOME/bin/
# run `vcf-concat -h` to make sure things work

# Install Strelka, this is how it's currently done in existing pipeline
# Note that Strelka needs Python 2.7, so that's probably what the system Python needs to be?
wget -O strelka_workflow-1.0.14.tar.gz ftp://strelka:%27%27@ftp.illumina.com/v1-branch/v1.0.14/strelka_workflow-1.0.14.tar.gz
tar xvfz strelka_workflow-1.0.14.tar.gz
cd strelka_workflow-1.0.14
./configure prefix=$HOME/bin
make
chmod -R a+rx ./*
make install
export STRELKA_BIN=$HOME/bin/bin

# add vaxrank to the Conda env
pip install vaxrank

# for vaxrank to generate PDF reports, need to do this on a Linux box:
sudo apt-get install xvfb

# get wkhtmltopdf for making vaxrank reports
wget https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/0.12.4/wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
tar xvfJ wkhtmltox-0.12.4_linux-generic-amd64.tar.xz
cd wkhtmltox/bin
sudo chown root:root wkhtmltopdf
sudo cp wkhtmltopdf /usr/local/bin/wkhtmltopdf
curl https://pastebin.com/raw/AmfYN3er > ~/.fonts.conf   # for the kerning to not be awful

# TODO(julia): explain how to set up netMHCcons and netMHCpan, for now they already exist on
# the PGVNode so going to punt on this

# Right now, the pipeline relies on having generated a bunch of reference genome content.
# See the example pt002_old_config.json for the files it expects. Current contents of a reference
# genome directory, I believe all of these are needed for correct DNA processing (these are specific
# to b37decoy, obviously different for other references):
b37decoy.dict
b37decoy.fasta
b37decoy.fasta.amb
b37decoy.fasta.ann
b37decoy.fasta.bwt
b37decoy.fasta.fai
b37decoy.fasta.pac
b37decoy.fasta.sa
cosmic.vcf
cosmic.vcf.idx
dbsnp.vcf
dbsnp.vcf.idx
transcripts.gtf

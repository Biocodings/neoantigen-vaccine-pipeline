"""
This contains rules for our own data processing libraries.
"""

# TODO(julia): add a rule for setting up Pyensembl cache, for now assuming it exists;
# will need to do something like
# export PYENSEMBL_CACHE_DIR='/biokepi/workdir/pyensembl-cache'
# pyensembl install --release 75 --species "homo sapiens"
# touch /biokepi/workdir/pyensembl-cache/b37decoy.cached
# (add this last one as input to the vaxrank rule later)

VCF_TYPES = ["strelka", "mutect"]
if config["run_mutect2"] == True:
    VCF_TYPES.append("mutect2")

rule vaxrank:
  input:
    vcfs = expand("{{prefix}}/{type}.vcf", type=VCF_TYPES),
    rna = "{prefix}/rna_final_sorted.bam",
    rna_index = "{prefix}/rna_final_sorted.bam.bai"
  output:
    ascii_report = "{prefix}/vaccine-peptide-report.txt",
    json_file = "{prefix}/vaccine-peptide-report.json",
    pdf_report = "{prefix}/vaccine-peptide-report.pdf",
    xlsx_report = "{prefix}/vaccine-peptide-report.xlsx"
  params:
    mhc_alleles = config["input"]["mhc_alleles"],
    patient_id = config["input"]["id"],
    mhc_predictor = "netmhcpan",
    vaccine_peptide_length = 25,
    padding_around_mutation = 5,
    max_vaccine_peptides_per_mutation = 3,
    min_mapping_quality = 1,
    min_variant_sequence_coverage = 1,
    min_alt_rna_reads = 2,
    mhc_epitope_lengths = "8-11"
  benchmark:
    "{prefix}/vaxrank_benchmark.txt"
  log:
    "{prefix}/vaxrank.log"
  run:
    vcf_input_str = ""
    for vcf in input.vcfs:
        vcf_input_str += "--vcf %s " % vcf
    rna = input.rna
    shell("""
        vaxrank %s \
        --bam {input.rna} \
        --mhc-predictor {params.mhc_predictor} \
        --mhc-alleles %s \
        --output-ascii-report {output.ascii_report} \
        --output-pdf-report {output.pdf_report} \
        --output-xlsx-report {output.xlsx_report} \
        --output-json-file {output.json_file} \
        --output-patient-id {params.patient_id} \
        --log-path {log} \
        --vaccine-peptide-length {params.vaccine_peptide_length} \
        --padding-around-mutation {params.padding_around_mutation} \
        --max-vaccine-peptides-per-mutation {params.max_vaccine_peptides_per_mutation} \
        --min-mapping-quality {params.min_mapping_quality} \
        --min-variant-sequence-coverage {params.min_variant_sequence_coverage} \
        --min-alt-rna-reads {params.min_alt_rna_reads} \
        --mhc-epitope-lengths {params.mhc_epitope_lengths}
        """ % (vcf_input_str, ",".join(params.mhc_alleles)))

# run a separate mutect task for each chromosome
# TODO(julia): need a better solution for running Java 1.7, for now hard-coding the path to that
# Java version as well as to the downloaded MuTect jar on PGVNode
rule mutect_per_chr:
  input:
    normal = "{prefix}/normal_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    tumor = "{prefix}/tumor_aligned_coordinate_sorted_dups_indelreal_bqsr.bam"
  output:
    "{prefix}/mutect_{chr}.vcf"
  params:
    reference = config["reference"]["genome"],
    cosmic = config["reference"]["cosmic"],
    dbsnp = config["reference"]["dbsnp"],
    java = "/home/julia/miniconda3/envs/java17/bin/java",
    mutect_jar = "/biokepi/workdir/toolkit/mutect-1.1.7.jar"
  benchmark:
    "{prefix}/mutect_{chr}_benchmark.txt"
  log:
    "{prefix}/mutect_{chr}.log"
  shell:
    "{params.java} -Xmx2g -jar {params.mutect_jar} "
    "--analysis_type MuTect "
    "--reference_sequence {params.reference} "
    "--cosmic {params.cosmic} "
    "--dbsnp {params.dbsnp} "
    "--intervals {wildcards.chr} "
    "--input_file:normal {input.normal} "
    "--input_file:tumor {input.tumor} "
    "--out {output}.out "
    "--vcf {output} "
    "--coverage_file {output}_coverage.wig "
    "2> {log}"
 
# is it okay to use vcf-concat and not vcf-merge?
rule mutect:
  input:
    expand("{{prefix}}/mutect_{chr}.vcf", chr=CHR)
  output:
    "{prefix}/mutect.vcf"
  shell:
    "vcf-concat {input} > {output}"

# TODO(julia): split by chromosome, like the MuTect jobs
rule mutect2:
  input:
    normal = "{prefix}/normal_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    tumor = "{prefix}/tumor_aligned_coordinate_sorted_dups_indelreal_bqsr.bam"
  output:
    "{prefix}/mutect2.vcf"
  params:
    reference = config["reference"]["genome"],
    dbsnp = config["reference"]["dbsnp"]
  benchmark:
    "{prefix}/mutect2_benchmark.txt"
  log:
    "{prefix}/mutect2.log"
  shell:
    "gatk -Xmx20g "
    "-T MuTect2 -I:normal {input.normal} -I:tumor {input.tumor} -R {params.reference} "
    "--dbsnp {params.dbsnp} -o {output} "
    "2> {log}"

rule strelka:
  input:
    normal = "{prefix}/normal_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    tumor = "{prefix}/tumor_aligned_coordinate_sorted_dups_indelreal_bqsr.bam"
  output:
    "{prefix}/strelka.vcf"   # placeholder
  params:
    reference = config["reference"]["genome"],
    strelka_config = "strelka_config.txt",
    strelka_bin = config["tools"]["strelka_bin"],
    output_dir = "{prefix}/strelka_output"
  benchmark:
    "{prefix}/strelka_benchmark.txt"
  log:
    "{prefix}/strelka.log"
  threads: 24
  shell:
    "{params.strelka_bin}/configureStrelkaWorkflow.pl "
    "--normal {input.normal} "
    "--tumor {input.tumor} "
    "--ref {params.reference} "
    "--config {params.strelka_config} "
    "--output-dir {params.output_dir}; "
    "cd {params.output_dir}; "
    "make -j {threads} "
    "2> {log}"

# run a separate mutect task for each chromosome
# TODO(julia): need a better solution for running Java 1.7, for now hard-coding the path to that
# Java version as well as to the downloaded MuTect jar on PGVNode
rule mutect_per_chr:
  input:
    normal = "{prefix}/normal_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    tumor = "{prefix}/tumor_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    reference = config["reference"]["genome"],
    cosmic = config["reference"]["cosmic"],
    dbsnp = config["reference"]["dbsnp"]
  output:
    "{prefix}/mutect_{chr}.vcf"
  benchmark:
    "{prefix}/mutect_{chr}_benchmark.txt"
  log:
    "{prefix}/mutect_{chr}.log"
  resources:
    mem_mb = 2000
  shell:
    "$JAVA7_BIN/java -Xmx2g -jar $MUTECT "
    "--analysis_type MuTect "
    "--reference_sequence {input.reference} "
    "--cosmic {input.cosmic} "
    "--dbsnp {input.dbsnp} "
    "--intervals {wildcards.chr} "
    "--input_file:normal {input.normal} "
    "--input_file:tumor {input.tumor} "
    "--out {output}.out "
    "--vcf {output} "
    "--coverage_file {output}_coverage.wig "
    "2> {log}"

# is it okay to use vcf-concat and not vcf-merge?
rule mutect:
  input:
    expand("{{prefix}}/mutect_{chr}.vcf", chr=_CHR)
  output:
    "{prefix}/mutect.vcf"
  shell:
    "vcf-concat {input} > {output}"

rule mutect2_per_chr:
  input:
    normal = "{prefix}/normal_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    tumor = "{prefix}/tumor_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    reference = config["reference"]["genome"],
    cosmic = config["reference"]["cosmic"],
    dbsnp = config["reference"]["dbsnp"]
  output:
    "{prefix}/mutect2_{chr}.vcf"
  benchmark:
    "{prefix}/mutect2_{chr}_benchmark.txt"
  log:
    "{prefix}/mutect2_{chr}.log"
  shell:
    "gatk -T MuTect2 "
    "-I:normal {input.normal} "
    "-I:tumor {input.tumor} "
    "-R {input.reference} "
    "--dbsnp {input.dbsnp} "
    "--cosmic {input.cosmic} "
    "--intervals {wildcards.chr} "
    "-o {output} "
    "2> {log}"

rule mutect2:
  input:
    expand("{{prefix}}/mutect2_{chr}.vcf", chr=_CHR)
  output:
    "{prefix}/mutect2.vcf"
  shell:
    "vcf-concat {input} > {output}"

# TODO(julia): the logs here print to stdout still, need to figure out what the logs are coming from
# and print to the logfile instead
#
# If not running in a Docker image, user must have these environment variables set:
# - STRELKA_BIN: directory of Strelka installation, must contain configureStrelkaWorkflow.pl
# - STRELKA_CONFIG: path to Strelka config file
rule strelka:
  input:
    normal = "{prefix}/normal_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    tumor = "{prefix}/tumor_aligned_coordinate_sorted_dups_indelreal_bqsr.bam",
    reference = config["reference"]["genome"]
  output:
    "{prefix}/strelka_output/results/passed.somatic.snvs.vcf",
    "{prefix}/strelka_output/results/passed.somatic.indels.vcf"
  params:
    output_dir = "{prefix}/strelka_output"
  benchmark:
    "{prefix}/strelka_benchmark.txt"
  log:
    "{prefix}/strelka.log"
  threads: 20
  shell:
    "rm -rf {params.output_dir}; "
    "$STRELKA_BIN/configureStrelkaWorkflow.pl "
    "--normal {input.normal} "
    "--tumor {input.tumor} "
    "--ref {input.reference} "
    "--config $STRELKA_CONFIG "
    "--output-dir {params.output_dir} &> {log}; "
    "cd {params.output_dir}; "
    "make -j {threads} "
    ">> {log} 2>&1"

rule strelka_combine:
  input:
    snvs = "{prefix}/strelka_output/results/passed.somatic.snvs.vcf",
    indels = "{prefix}/strelka_output/results/passed.somatic.indels.vcf",
    reference = config["reference"]["genome"]
  output:
    "{prefix}/strelka.vcf"
  benchmark:
    "{prefix}/strelka_combine_benchmark.txt"
  log:
    "{prefix}/strelka_combine.log"
  shell:
    "gatk -T CombineVariants "
    "--variant:snvs {input.snvs} "
    "--variant:indels {input.indels} "
    "-R {input.reference} "
    "-genotypeMergeOptions PRIORITIZE "
    "-o {output} "
    "-priority snvs,indels "
    "2> {log}"
